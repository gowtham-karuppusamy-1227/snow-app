<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Enroll Certificate">d830d29c1bc91d1061858480cd4bcbe1</cat_item>
        <cat_variable>IO:970a2d33dba3111016a0285b1396190e</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>set_godaddy_validity_unit</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }


    function getResponse(response) {
        try {
            var answer = response.responseXML.documentElement.getAttribute('answer');
            try {
                answer = JSON.parse(answer);
            } catch (err) {
                throw "Couldn't parse GoDaddy Slot Size details.";
            }
            var server_response = answer.response;
            var status = server_response.output.status;
            if (status != "Success") {
                throw "Could not find Slot Size for the selected input.";
            }
            var slot_size = server_response.output.slot_response;
            if (slot_size.length > 0) {
                g_form.setDisplay('godaddy_slot_size', true);
                g_form.setMandatory('godaddy_slot_size', true);
                g_form.clearOptions('godaddy_slot_size');
                g_form.clearValue('godaddy_slot_size');
                g_form.addOption('godaddy_slot_size', '', 'Select');
                for (var slot = 0; slot < slot_size.length; slot++) {
                    g_form.addOption('godaddy_slot_size', slot_size[slot], slot_size[slot]);
                }
                g_form.setValue('godaddy_slot_size', '', 'Select');
            }
        } catch (error) {
            g_form.addErrorMessage("Error : " + error);
            var message = 'Error occurred while fetching slot size from AppViewX - ' + error;
            var ga = new GlideAjax('avx_logger');
            ga.addParam("sysparm_name", "avxLogger");
            ga.addParam("sysparm_level", "Error");
            ga.addParam("sysparm_script", "set_godaddy_validity_unit");
            ga.addParam("sysparm_application", "AppViewX");
            ga.addParam("sysparm_message", message);
            ga.getXML(function() {});
        }
    }

    try {
        var CA = g_form.getValue('certificate_authority');
        var ca_account = g_form.getValue('ca_account');
        var ca_policy = g_form.getValue('ca_policy_details');
        var certificate_category = g_form.getValue('certificate_category');
        var godaddy_certificate_type = g_form.getValue('godaddy_certificate_type');
        var certificate_policy = g_form.getValue('certificate_policy');
        try {
            ca_policy = JSON.parse(ca_policy);
        } catch (err) {
            throw "Couldn't parse the ca policy details.";
        }
        if (CA === 'GoDaddy') {
            g_form.setMandatory('godaddy_slot_size', false);
            g_form.setDisplay('godaddy_slot_size', false);
            g_form.clearOptions('godaddy_slot_size');
            g_form.clearValue('godaddy_slot_size');
            g_form.setMandatory('validity_unit', true);
            g_form.setDisplay('validity_unit', true);
            g_form.clearOptions('validity_unit');
            g_form.addOption('validity_unit', '', 'Select');
            for (var iterator = 0; iterator < ca_policy.length; iterator++) {
                var result = ca_policy[iterator];
                if (!result.certificateAuthority) {
                    throw 'Certificate Authority Details is not configured in AppViewX Policy.';
                }
                if (result.certificateAuthority === CA) {
                    if (!result.caSettings) {
                        throw 'CA Account settings is not configured in AppViewX Policy.';
                    }
                    var godaddy_casettings = result.caSettings;
                    for (var div = 0; div < godaddy_casettings.length; div++) {
                        if (godaddy_casettings[div].name == ca_account) {
                            if (!godaddy_casettings[div].certTypes) {
                                throw 'Certificate types are not configured in AppviewX Policy.';
                            }
                            var cert_types = godaddy_casettings[div].certTypes;
                            for (var cert_type = 0; cert_type < cert_types.length; cert_type++) {
                                if ((cert_types[cert_type].type).toLowerCase() == certificate_category.toLowerCase() && cert_types[cert_type].name == godaddy_certificate_type) {
                                    var validity = cert_types[cert_type].validityPeriods;
                                    var keys = Object.keys(validity);
                                    for (var v_unit = 0; v_unit < keys.length; v_unit++) {
                                        if (keys[v_unit].includes("Years") && validity[keys[v_unit]].length > 0) {
                                            g_form.addOption('validity_unit', "Years", "Years");
                                        } else if (keys[v_unit].includes("Months") && validity[keys[v_unit]].length > 0) {
                                            g_form.addOption('validity_unit', "Months", "Months");
                                        } else if (keys[v_unit].includes("Days") && validity[keys[v_unit]].length > 0) {
                                            g_form.addOption('validity_unit', "Days", "Days");
                                        }
                                    }
                                    g_form.setValue('validity_unit', '', 'Select');
                                }
                            }
							var company_name = g_form.getValue('company_name');
                            var ajax = new GlideAjax('get_godaddy_slot_size');
                            ajax.addParam('sysparm_name', 'getGodaddySlotSize');
                            ajax.addParam('certificate_authority', CA);
                            ajax.addParam('ca_settings_name', ca_account);
                            ajax.addParam('certificate_type', godaddy_certificate_type);
                            ajax.addParam('certificate_category', certificate_category);
                            ajax.addParam('cert_policy', certificate_policy);
							ajax.addParam('sysparm_name', company_name);
                            ajax.getXML(getResponse);
                        }
                    }
                }
            }
        }
    } catch (error) {
        g_form.addErrorMessage("Error: " + error + " Please check with the AppviewX admin/CLM Settings.");
        var message = 'Error occured while setting entrust validity unit in the form - ' + error;
        var ga = new GlideAjax('avx_logger');
        ga.addParam("sysparm_name", "avxLogger");
        ga.addParam("sysparm_level", "Error");
        ga.addParam("sysparm_script", "set_entrust_validity_unit");
        ga.addParam("sysparm_application", "AppViewX");
        ga.addParam("sysparm_message", message);
        ga.getXML(function() {});
    }
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-10 18:13:17</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>61e692f7db27111016a0285b139619f0</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>set_godaddy_validity_unit</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>catalog_script_client_61e692f7db27111016a0285b139619f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-01-05 07:23:13</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
