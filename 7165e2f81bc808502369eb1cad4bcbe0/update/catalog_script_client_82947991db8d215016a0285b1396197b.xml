<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Enroll Certificate">d830d29c1bc91d1061858480cd4bcbe1</cat_item>
        <cat_variable>IO:61ac5712db34e11016a0285b139619b2</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>set_profile_names</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
    try {
        var cmdb_sync = g_form.getValue('cmdb_sync');
        var vendor_name = g_form.getValue('vendor_name');
        var device_name = g_form.getValue('device_name');
		var company_name = g_form.getValue('company_name');
        var ga = new GlideAjax('get_profile_names');
        ga.addParam("sysparm_name", "getProfileNames");
        ga.addParam("sysparm_vendorName", vendor_name);
        ga.addParam("sysparm_deviceName", device_name);
		ga.addParam("sysparm_company", company_name);
        ga.getXML(getResponse);
    } catch (error) {
        g_form.addErrorMessage("Error while fetching the profile names for push: " + error);
        var message = 'Error occured while setting profile names for the push - ' + error;
        ga = new GlideAjax('avx_logger');
        ga.addParam("sysparm_name", "avxLogger");
        ga.addParam("sysparm_level", "Error");
        ga.addParam("sysparm_script", "set_profile_names");
        ga.addParam("sysparm_application", "AppViewX");
        ga.addParam("sysparm_message", message);
        ga.getXML(function() {});
    }
	function getResponse(response) {
		try {
			g_form.clearValue('profile_name');
            g_form.clearOptions('profile_name');
			g_form.clearValue('profile_name_reference');
			g_form.setMandatory('profile_name_reference', false);
			g_form.setDisplay('profile_name_reference', false);
			g_form.setMandatory('profile_name', false);
			g_form.setDisplay('profile_name', false);
			if (cmdb_sync == 'true') {
				g_form.setDisplay('profile_name_reference', true);
				g_form.setMandatory('profile_name_reference', true);
			} else {
				g_form.setDisplay('profile_name', true);
				g_form.setMandatory('profile_name', true);
			}
			var iterator;
            var res = response.responseXML.documentElement.getAttribute('answer');
            try {
                res = JSON.parse(res);
            } catch (err) {
                throw res || "Couldn't parse the response while trying to get profile names for push.";
            }
			if (cmdb_sync == 'true') {
				if (res.length == 0) {
					throw "The selected device doesn't have any profiles associated to it.";
				}
				// g_form.setDisplay('profile_name_reference', true);
				// g_form.setMandatory('profile_name_reference', true);
			} else {
				// g_form.setDisplay('profile_name', true);
				// g_form.setMandatory('profile_name', true);
				g_form.addOption('profile_name', '', 'Select');
				if(!res.response.objects) {
					throw "Error while getting the response from the AppViewX for the profile names " + JSON.stringify(res);
				}
				var profile_list = res.response.objects;
				if (profile_list.length == 0) {
					throw "There is no profile available for the selected device " + device_name;
				}
                for (iterator = 0; iterator < profile_list.length; iterator++) {
                    g_form.addOption('profile_name', profile_list[iterator], profile_list[iterator]);
                }
			}
		} catch (error) {
            g_form.addErrorMessage("Error while fetching the profile names for push: " + error);
            var message = 'Error occured while fetching the profile names for push - ' + error;
            var ga = new GlideAjax('avx_logger');
            ga.addParam("sysparm_name", "avxLogger");
            ga.addParam("sysparm_level", "Error");
            ga.addParam("sysparm_script", "set_profile_names");
            ga.addParam("sysparm_application", "AppViewX");
            ga.addParam("sysparm_message", message);
            ga.getXML(function() {});
		}
	}
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-15 10:49:58</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>82947991db8d215016a0285b1396197b</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>set_profile_names</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>catalog_script_client_82947991db8d215016a0285b1396197b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-14 10:29:59</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
