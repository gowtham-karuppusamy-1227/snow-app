<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description/>
        <field>company</field>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>clm_settings_get_ca_for_multi_domain</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if (isLoading || newValue === '') {
      return;
   }
	if (newValue != oldValue) {
		var loadingDialog = new GlideDialogWindow("dialog_loading", true);
		loadingDialog.setPreference('table', 'loading');
		loadingDialog.setTitle('Loading...');
		loadingDialog.render();
		var company_name = g_form.getValue("company");
		var ga = new GlideAjax('clm_settings_get_certificate_authority');
		ga.addParam("sysparm_name", "getCertificateAuthority");
		ga.addParam("sysparm_company", company_name);
		ga.getXML(getResponse);
	}
	
    function getResponse(response) {
        try {
            g_form.clearOptions('ca_type');
            var supported_ca = ['AppViewX', 'DigiCert', 'Microsoft Enterprise', 'Entrust', 'Ejbca', 'GoDaddy', 'Amazon', 'Comodo Certificate Manager', 'GlobalSign', 'GlobalSignMSSL', 'AppViewX PKIaaS', 'Trustwave', 'HydrantID', 'SwissSign','Microsoft Standalone'];
            var res = response.responseXML.documentElement.getAttribute('answer');
            try {
                res = JSON.parse(res);
            } catch (err) {
                throw res || "Could not parse JSON response";
            }
            g_form.setValue("ca_response", JSON.stringify(res), JSON.stringify(res));
            res = res.response.output;
            for (var iterator = 0; iterator < res.length; iterator++) {
                if (supported_ca.includes(res[iterator]['certificateAuthority'])) {
                    g_form.addOption('ca_type', res[iterator]['certificateAuthority'], res[iterator]['certificateAuthority']);
                }
            }
        } catch (error) {
            g_form.addErrorMessage("Error: " + error);
            var message = "Error: " + error;
            var ga = new GlideAjax('avx_logger');
            ga.addParam("sysparm_name", "avxLogger");
            ga.addParam("sysparm_level", "Error");
            ga.addParam("sysparm_script", "clm_settings_get_ca_for_multi_domain");
            ga.addParam("sysparm_application", "AppViewX");
            ga.addParam("sysparm_message", message);
            ga.getXML(function() {});
        } finally {
            loadingDialog.destroy();
        }
    }
   //Type appropriate comment here, and begin script below
   
}]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-01-02 09:37:20</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>37b8a2e41b2b3950cda7db91dd4bcbf5</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>clm_settings_get_ca_for_multi_domain</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>sys_script_client_37b8a2e41b2b3950cda7db91dd4bcbf5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-03 06:09:58</sys_updated_on>
        <table>x_avx_appviewx_aut_clm_settings</table>
        <type>onChange</type>
        <ui_type>0</ui_type>
        <view/>
    </sys_script_client>
</record_update>
