<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Enroll Certificate">d830d29c1bc91d1061858480cd4bcbe1</cat_item>
        <cat_variable>IO:d1ba2ad41b8d1d1061858480cd4bcbac</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>set_certificate_type</name>
        <order/>
        <published_ref/>
        <script><![CDATA[/*
Function to populate the below details by dynamically fetching it from the AppviewX policy..
	1. Hash values
	2. Key values
	3. Bit lengths
*/
function onChange(control, oldValue, newValue, isLoading, isTemplate) {
    if (isLoading || newValue === '') {
        return;
    }
    try {
        var CA = g_form.getValue('certificate_authority');
        var ca_account = g_form.getValue('ca_account');
        var ca_policy = g_form.getValue('ca_policy_details');
        var certificate_category = g_form.getValue('certificate_category');
        var division_type = g_form.getValue('division');
        try {
            ca_policy = JSON.parse(ca_policy);
        } catch (err) {
            throw "Couldn't parse the ca policy details.";
        }
        if (CA === 'DigiCert') {
            g_form.setDisplay('certificate_type', true);
            g_form.setMandatory('certificate_type', true);
            g_form.clearOptions('certificate_type');
            g_form.addOption('certificate_type', '', 'Select');
            for (var iterator = 0; iterator < ca_policy.length; iterator++) {
                var result = ca_policy[iterator];
                if (!result.certificateAuthority) {
                    throw 'Certificate Authority is not configured in AppviewX Policy.';
                }
                if (result.certificateAuthority === CA) {
                    if (!result.caSettings) {
                        throw 'CA settings are not configured in AppViewX Policy';
                    }
                    var digicert_divisions = result.caSettings;
                    for (var div = 0; div < digicert_divisions.length; div++) {
                        if (digicert_divisions[div].name === ca_account) {
                            if (!digicert_divisions[div].divisions) {
                                throw 'Division types are not configured in AppviewX Policy.';
                            }
                            var division = digicert_divisions[div].divisions;
                            for (var div_type = 0; div_type < division.length; div_type++) {
                                if (division[div_type].name === division_type) {
									var division_id = division[div_type].id || '';
									g_form.setValue("division_id", division_id, division_id);
                                    if (!division[div_type].certTypes) {
                                        throw 'Certificate types are not configured in AppviewX Policy.';
                                    }
                                    var cert_types = division[div_type].certTypes;
                                    for (var cert_type = 0; cert_type < cert_types.length; cert_type++) {
                                        if ((cert_types[cert_type].type).toLowerCase() == certificate_category.toLowerCase()) {
                                            g_form.addOption('certificate_type', cert_types[cert_type].name, cert_types[cert_type].name);
                                        }
                                    }
                                    g_form.setValue('certificate_type', '', 'Select');
                                }
                            }
                            break;
                        }
                    }
                }
            }
        } else {
            g_form.clearOptions('certificate_type');
            g_form.setMandatory('certificate_type', false);
            g_form.setDisplay('certificate_type', false);
            g_form.clearOptions('server_type');
            g_form.setMandatory('server_type', false);
            g_form.setDisplay('server_type', false);
        }
    } catch (error) {
        g_form.addErrorMessage("Error: " + error + " Please check with the AppviewX admin/CLM Settings.");
        var message = 'Error occurred while setting certificate type in the form - ' + error;
        var ga = new GlideAjax('avx_logger');
        ga.addParam("sysparm_name", "avxLogger");
        ga.addParam("sysparm_level", "Error");
        ga.addParam("sysparm_script", "set_certificate_type");
        ga.addParam("sysparm_application", "AppViewX");
        ga.addParam("sysparm_message", message);
        ga.getXML(function() {});
    }

}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-26 16:06:01</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7ce184f51b65d550cda7db91dd4bcb0a</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>set_certificate_type</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>catalog_script_client_7ce184f51b65d550cda7db91dd4bcb0a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-04 18:18:05</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
