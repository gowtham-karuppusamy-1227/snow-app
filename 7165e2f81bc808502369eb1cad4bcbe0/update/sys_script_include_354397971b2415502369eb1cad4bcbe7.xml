<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_avx_appviewx_aut.clm_settings_get_certificate_authority</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Fetches all the configured Certificate Authorities in AppViewX.</description>
        <name>clm_settings_get_certificate_authority</name>
        <script><![CDATA[var clm_settings_get_certificate_authority = Class.create();
clm_settings_get_certificate_authority.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    getCertificateAuthority: function() {
        try {
            var return_value = {};
            var message;
            var company = this.getParameter("sysparm_company");
            if (gs.getProperty("glide.sys.domain.partitioning") == 'true' && !company) {
                throw "Please select the company to proceed further.";
            }
            var client_id;
            var script_include_call = new appviewx_oauth_token_generation();
            var token_generation = script_include_call.TestConnection(client_id, company);
            if (token_generation.length == 2 && token_generation[0] == 200) {
                var parse_response = JSON.parse(token_generation[1]);
                var token = parse_response['response'];
            } else {
                throw "Error while generating the token";
            }
            var r = new sn_ws.RESTMessageV2();
            if (gs.getProperty("glide.sys.domain.partitioning") == 'true') {
                var gr = new GlideRecordSecure('x_avx_appviewx_aut_connection_settings_table');
				gr.addQuery('company', company);
                gr.query();
				if (!gr.hasNext()) {
					throw "Could not find AppViewX instance url to fetch the details.";
				}
				while (gr.next()) {
					var url = gr.getValue('instance_url') || '';
					var mid_server = gr.getValue('mid_server') || '';
				}
            } else {
				url = gs.getProperty("x_avx_appviewx_aut.URL");
				mid_server = gs.getProperty("x_avx_appviewx_aut.MID Server Name");
			}
            var payload = {
                "payload": {
                    "hook": {
                        "name": "SNOW - Get Configured Certificate Authority"
                    },
                    "input": {}
                }
            };
            if (mid_server != "") {
                r.setMIDServer(mid_server);
                r.setEccParameter('skip_sensor', 'true');
            }
            r.setHttpMethod("post");
            r.setRequestHeader("token", token);
            r.setRequestHeader('User-Agent', 'snow');
            r.setRequestHeader("Content-Type", "application/json");
            r.setEndpoint(url + "/avxapi/execute-hook?&gwsource=web");
            r.setRequestBody(JSON.stringify(payload));
            r.setHttpTimeout(30000);
            var response = r.executeAsync();
            var responseBody, responseMessage;
            if (response.haveError()) {
                responseBody = response.getBody();
                try {
                    var res = JSON.parse(responseBody);
                    message = res.message;
                } catch (err) {
                    message = responseBody;
                }
                throw message;
            } else {
                responseBody = response.getBody();
                responseBody = JSON.parse(responseBody);
                return JSON.stringify(responseBody);
            }
        } catch (error) {
            var log = new GlideRecordSecure('x_avx_appviewx_aut_logs');
            log.initialize();
            log.level = 'Error';
            log.script = 'Setting CA in CLM settings.';
            log.application = 'AppViewX';
            log.message = 'Error occured while getting certificate authority from AppViewX -  ' + error;
            log.insert();
            return error;
        }
    },
    type: 'clm_settings_get_certificate_authority'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-13 06:16:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>354397971b2415502369eb1cad4bcbe7</sys_id>
        <sys_mod_count>52</sys_mod_count>
        <sys_name>clm_settings_get_certificate_authority</sys_name>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>sys_script_include_354397971b2415502369eb1cad4bcbe7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-04 10:26:41</sys_updated_on>
    </sys_script_include>
</record_update>
