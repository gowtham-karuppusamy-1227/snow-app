<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Renew Certificate">9e85ab541b1595102369eb1cad4bcb62</cat_item>
        <cat_variable>IO:ea3c0dba1bd1d15061858480cd4bcbce</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>renew_set_certificate_authority</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
    var ga = new GlideAjax('renew_get_certificate_authority_name'); //this is the script include
    ga.addParam("sysparm_name", "getCaDetails");
    ga.addParam("sysparm_caTagName", newValue);
    ga.getXML(getResponse);

    function getResponse(response) {
        try {
            var res = response.responseXML.documentElement.getAttribute('answer');
            try {
                res = JSON.parse(res);
            } catch (err) {
                throw "Couldn't parse certificate authority details from CLM settings.";
            }
			g_form.clearValue('company_name');
			g_form.setValue('company_name', res['company_name'], res['company_name']);
			g_form.clearValue('certificate_authority');
            g_form.setValue('certificate_issuance_file_formats', res['certificate_retrieval_file_format'], res['certificate_retrieval_file_format']);
            g_form.setValue('certificate_category', res['cert_category'], res['cert_category']);
            g_form.setValue('certificate_authority', res['certificate_authority'], res['certificate_authority']);
            g_form.clearOptions('certificate');
			g_form.clearValue('certificate');
            g_form.setMandatory('certificate', false);
            g_form.setDisplay('certificate', false);
			g_form.clearValue('certificate_reference');
            g_form.setMandatory('certificate_reference', false);
            g_form.setDisplay('certificate_reference', false);
            g_form.clearValue('common_name');
            g_form.setMandatory('common_name', false);
            g_form.setDisplay('common_name', false);
            g_form.clearValue('serial_number');
            g_form.setMandatory('serial_number', false);
            g_form.setDisplay('serial_number', false);
            g_form.setMandatory('renwal_type', false);
            g_form.setDisplay('renwal_type', false);
            g_form.clearValue('csr_type');
            g_form.setMandatory('csr_type', false);
            g_form.setDisplay('csr_type', false);
            g_form.clearValue('csr_upload_option');
            g_form.setMandatory('csr_upload_option', false);
            g_form.setDisplay('csr_upload_option', false);
            g_form.clearValue('paste_csr');
            g_form.setMandatory('paste_csr', false);
            g_form.setDisplay('paste_csr', false);
            g_form.clearValue('file_upload');
            g_form.setMandatory('file_upload', false);
            g_form.setDisplay('file_upload', false);
            g_form.setMandatory('email_id', false);
            g_form.setDisplay('email_id', false);
            g_form.clearValue('subject_alternative_name');
            g_form.setDisplay('subject_alternative_name', false);
            g_form.clearValue('organisation');
            g_form.setDisplay('organisation', false);
            g_form.clearValue('organisation_unit');
            g_form.setDisplay('organisation_unit', false);
            g_form.clearValue('country');
            g_form.setDisplay('country', false);
            g_form.clearValue('state');
            g_form.setDisplay('state', false);
            g_form.clearValue('city');
            g_form.setDisplay('city', false);
            g_form.clearValue('email_address');
            g_form.setDisplay('email_address', false);
            g_form.clearValue('hash_function');
            g_form.setDisplay('hash_function', false);
            g_form.clearValue('bit_length_key_type');
            g_form.setDisplay('bit_length_key_type', false);
            g_form.clearOptions('certificate_issuance_format');
            g_form.setMandatory('certificate_issuance_format', false);
            g_form.setDisplay('certificate_issuance_format', false);
			g_form.clearValue('push_enabled_or_disabled');
			g_form.clearValue('assignment_group_selection');
			g_form.clearValue('clm_cert_attributes');
			g_form.clearValue('renew_edit_certificate_attributes');
			g_form.clearValue('meta_data_info');
			g_form.clearValue('mandatory_attributes');
			g_form.clearValue('cert_attribute_length');
			g_form.clearValue('parsed_csr_values');
			g_form.setDisplay('parsed_csr_values', false);
            for (var iterator = 1; iterator <= 10; iterator++) {
                g_form.setMandatory('meta_data_' + iterator, false);
				g_form.setReadOnly('meta_data_' + iterator, false);
                g_form.clearValue('meta_data_' + iterator);
                g_form.setDisplay('meta_data_' + iterator, false);
            }
			g_form.setValue('assignment_group_selection', res['assignment_group_selection'], res['assignment_group_selection']);
			g_form.setValue('push_enabled_or_disabled', res['push_to_end_device'], res['push_to_end_device']);
			g_form.clearValue('certificate_retrieval_mode');
			g_form.setValue('certificate_retrieval_mode', res['certificate_retrieval_mode'], res['certificate_retrieval_mode']);
			g_form.clearValue('send_certificate_to_end_user');
			g_form.setValue('send_certificate_to_end_user', res['send_certificate'], res['send_certificate']);
			if (res['push_to_end_device'] == '1') {
				g_form.setDisplay('push_to_end_device', true);
			} else {
				g_form.setDisplay('push_to_end_device', false);
			}
			var cmdb_sync = res['cmdb_sync'];
			var renewal_method = res['renewal_method'].replace(", ", ",").split(",");
			var renewal_csr_type = res['renewal_csr_type'].replace(", ", ",").split(",");
			g_form.addOption('renwal_type', '', 'Select');
			for (var method = 0; method < renewal_method.length; method++) {
				if (renewal_method[method] == 'Generate with new key') {
					g_form.addOption('renwal_type', 'Create with new key', 'Generate with new key');
				} else {
					g_form.addOption('renwal_type', renewal_method[method], renewal_method[method]);
				}
			}
			g_form.addOption('csr_type', '', 'Select');
			for (var csr_method = 0; csr_method < renewal_csr_type.length; csr_method++) {
				if (renewal_csr_type[csr_method] == 'Existing CSR Parameters') {
					g_form.addOption('csr_type', 'Existing CSR', 'Existing CSR Parameters');
				} else {
					g_form.addOption('csr_type', renewal_csr_type[csr_method], renewal_csr_type[csr_method]);
				}
			}
			g_form.setValue('cmdb_sync', cmdb_sync, cmdb_sync);
            if ('certificate_retrieval_mode' in res) {

                if (res['certificate_retrieval_mode'] === "Send to User Input Email" || res['certificate_retrieval_mode'] === "Attach to RITM and Email to User Input") {
                    g_form.clearValue('email_id');
                    g_form.setDisplay('email_id', true);
                    g_form.setMandatory('email_id', true);

                } else if (res['certificate_retrieval_mode'] === "Send to Certificate Requestor Email" || res['certificate_retrieval_mode'] === "Attach to RITM and Send to Requestor" ) {
                    g_form.clearValue('email_id');
                    g_form.setDisplay('email_id', true);
                    g_form.setMandatory('email_id', true);
                    if (res.logged_in_user_email) {
                        g_form.setValue('email_id', res.logged_in_user_email, res.logged_in_user_email);
                        g_form.setReadOnly('email_id', true);
                    } else {
                        g_form.addInfoMessage('Requestor Email is not configured kindly enter the mail id');
                    }
                } else {
                    g_form.clearValue('email_id');
                    g_form.setMandatory('email_id', false);
                    g_form.setDisplay('email_id', false);
                }
            }
			g_form.setValue('clm_cert_attributes', res['certificate_attributes'], res['certificate_attributes']);
			g_form.setValue('renew_edit_certificate_attributes', res['edit_certificate_attributes'], res['edit_certificate_attributes']);
            g_form.clearValue('appviewx_one_level_approval_email_id');
            g_form.clearValue('appviewx_two_level_approval_email_id');
			g_form.clearValue('ticket_assignment_group');
			g_form.setMandatory('ticket_assignment_group', false);
			g_form.setDisplay('ticket_assignment_group', false);
			g_form.clearValue('ticket_assignment_group_value');
			var ticket_assignment_group_value = res['ticket_assignment_group'];
			g_form.setValue('ticket_assignment_group_value', ticket_assignment_group_value, ticket_assignment_group_value);
			if (ticket_assignment_group_value == "Allow user to select assignment group") {
				g_form.setDisplay('ticket_assignment_group', true);
				g_form.setMandatory('ticket_assignment_group', true);
			}
            if (res['use_approval_settings_from_create'] > 0) {
                if ('is_approval_required_in_appviewx' in res) {
                    if (res['is_approval_required_in_appviewx'] > 0) {
                        g_form.setValue('appviewx_approval', res['approval_levels_in_appviewx'], res['approval_levels_in_appviewx']);
                        if (res['approval_levels_in_appviewx'] == "1") {
                            g_form.setValue('appviewx_one_level_approval_email_id', res['appviewx_one_level_approval_mail_id_for_create'], res['appviewx_one_level_approval_mail_id_for_create']);
                        } else {
                            g_form.setValue('appviewx_one_level_approval_email_id', res['appviewx_one_level_approval_mail_id_for_create'], res['appviewx_one_level_approval_mail_id_for_create']);
                            g_form.setValue('appviewx_two_level_approval_email_id', res['appviewx_two_level_approval_mail_id_for_create'], res['appviewx_two_level_approval_mail_id_for_create']);
                        }
                    } else {
                        g_form.setValue('appviewx_approval', "", "Please select approval levels in res settings.");
                    }
                }
            } else {

                if ('is_approval_needed_in_appviewx_renewal' in res) {
                    if (res['is_approval_needed_in_appviewx_renewal'] > 0) {
                        g_form.setValue('appviewx_approval', res['approval_levels_in_appviewx_renewal'], res['approval_levels_in_appviewx_renewal']);
                        if (res['approval_levels_in_appviewx_renewal'] == "1") {
                            g_form.setValue('appviewx_one_level_approval_email_id', res['appviewx_one_level_approval_mail_id_for_renew'], res['appviewx_one_level_approval_mail_id_for_renew']);
                        } else {
                            g_form.setValue('appviewx_one_level_approval_email_id', res['appviewx_one_level_approval_mail_id_for_renew'], res['appviewx_one_level_approval_mail_id_for_renew']);
                            g_form.setValue('appviewx_two_level_approval_email_id', res['appviewx_two_level_approval_mail_id_for_renew'], res['appviewx_two_level_approval_mail_id_for_renew']);
                        }
                    } else {
                        g_form.setValue('appviewx_approval', "", "Please select approval levels in res settings.");
                    }

                }
            }

        } catch (error) {
            g_form.addErrorMessage("Error: " + error);
            var message = 'Error occurred while setting certificate authority details in the form - ' + error;
            var ga = new GlideAjax('avx_logger');
            ga.addParam("sysparm_name", "avxLogger");
            ga.addParam("sysparm_level", "Error");
            ga.addParam("sysparm_script", "renew_set_certificate_authority");
            ga.addParam("sysparm_application", "AppViewX");
            ga.addParam("sysparm_message", message);
            ga.getXML(function() {});
        }

    }
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-22 04:37:14</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2627e85adb06155016a0285b1396192d</sys_id>
        <sys_mod_count>44</sys_mod_count>
        <sys_name>renew_set_certificate_authority</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>catalog_script_client_2627e85adb06155016a0285b1396192d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-20 06:16:59</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
