<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Enroll Certificate">d830d29c1bc91d1061858480cd4bcbe1</cat_item>
        <cat_variable>IO:c21862901b8d1d1061858480cd4bcb40</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>set_ca_account</name>
        <order/>
        <published_ref/>
        <script><![CDATA[/*
Function to populate the below details by dynamically fetching it from the AppviewX policy..
	1. CA account details
*/

function set_certificate_formats() {
    var certificate_formats = g_form.getValue('certificate_issuance_file_formats');
    var csr_input_method = g_form.getValue('csr_input_method');
    var CA = g_form.getValue('certificate_authority');
    var formats = certificate_formats.split(",");
    var send_certificate_to_end_user = g_form.getValue('send_certificate_to_end_user');
    var passwordProtectedFormats = ['PFX', 'P12', 'JKS'];

    g_form.clearValue('certificate_issuance_format');
    g_form.clearOptions('certificate_issuance_format');

    if (send_certificate_to_end_user == "1") {
        g_form.setDisplay('certificate_issuance_format', true);
        g_form.setMandatory('certificate_issuance_format', true);

        var formatToDisplay = formats.filter(function(cert_format) {
            cert_format = cert_format.trim().toUpperCase();
            var isPasswordProtected = passwordProtectedFormats.indexOf(cert_format) !== -1;
            return !isPasswordProtected || (csr_input_method !== 'Upload CSR' && CA !== 'Amazon');
        });

        formatToDisplay.forEach(function(format) {
            g_form.addOption('certificate_issuance_format', format, format);
        });

        if (formatToDisplay.length > 1) {
            g_form.addOption('certificate_issuance_format', '', 'Select', 0);
        }
    }
}

function onChange(control, oldValue, newValue, isLoading, isTemplate) {
    if (isLoading || newValue === '') {
        return;
    }
    var ga = new GlideAjax('get_ca_details');
    var ca_tag_name = g_form.getValue('ca_tag_name');
    var company_name = g_form.getValue('company_name');
    ga.addParam("sysparm_name", "getCaDetails");
    ga.addParam("sysparm_company", company_name);
    ga.addParam("sysparm_caTagName", ca_tag_name);

    ga.getXML(getResponse);

    function getResponse(response) {
        try {
            var res = response.responseXML.documentElement.getAttribute('answer');
            var cert_category = g_form.getValue('certificate_category');
            var csr_input = g_form.getValue('csr_input_method');
            var csr_parameter_values = g_form.getValue('csr_parameter_values');
            csr_parameter_values = csr_parameter_values.split(',');
            try {
                res = JSON.parse(res);
            } catch (err) {
                throw res || "Couldn't parse the response to get ca account from CLM table.";
            }
            g_form.clearValue('ca_account');
            if ('ca_account' in res) {
                g_form.setValue('ca_account', res['ca_account'], res['ca_account']);
            } else {
                throw 'CA Account Details is not configured in AppviewX policy.';
            }
            if (cert_category === 'Client' && csr_input === 'Manual') {
                g_form.setDisplay('email_address', true);
                g_form.setMandatory('email_address', true);
            } else if (g_form.getValue('certificate_authority') === 'GlobalSign' || g_form.getValue('certificate_authority') == 'DigiCert MPKI') {
                g_form.setDisplay('email_address', true);
                g_form.setMandatory('email_address', true);
            } else {
                g_form.setMandatory('email_address', false);
                g_form.setDisplay('email_address', false);
				g_form.clearValue('email_address');
            }
            if (csr_input === 'Manual') {
                if (csr_parameter_values.indexOf("Email Address") >= 0) {
                    g_form.setDisplay('email_address', true);
                }
            }
            set_certificate_formats();
        } catch (error) {
            g_form.addErrorMessage("Error: " + error);
            var message = 'Error occurred while fetching ca account from CLM settings table - ' + error;
            var ga = new GlideAjax('avx_logger');
            ga.addParam("sysparm_name", "avxLogger");
            ga.addParam("sysparm_level", "Error");
            ga.addParam("sysparm_script", "set_ca_account");
            ga.addParam("sysparm_application", "AppViewX");
            ga.addParam("sysparm_message", message);
            ga.getXML(function() {});
        }
    }
    g_form.clearValue('certificate_validation_type');
    g_form.clearValue('certificate_transparency_logging_preference');
    var enable_san_value = g_form.getValue("enable_san_fields");
    var san_names = g_form.getValue('san_names');
    if (enable_san_value == '1') {
        san_names = JSON.parse(san_names);
    }
    if (g_form.getValue('csr_input_method') === 'Manual') {
        if ((g_form.getValue('certificate_category').toLowerCase() === 'client' || g_form.getValue('certificate_category').toLowerCase() === 'codesigning') && g_form.getValue('certificate_authority') !== 'Microsoft Enterprise') {
            g_form.clearValue('add_dns_values');
            g_form.clearValue('add_ip_address');
            g_form.clearValue('dns');
            g_form.clearValue('ip_address');
            g_form.clearValue('subject_alternative_name');
            g_form.setDisplay('subject_alternative_name', false);
            g_form.setDisplay('san_fields', false);
            g_form.setDisplay('add_dns_values', false);
            g_form.setDisplay('add_ip_address', false);
            g_form.setDisplay('dns', false);
            g_form.setDisplay('ip_address', false);
            g_form.setMandatory('certificate_validation_type', false);
            g_form.setDisplay('certificate_validation_type', false);
        } else {
            g_form.clearValue('add_dns_values');
            g_form.clearValue('add_ip_address');
            g_form.clearValue('dns');
            g_form.clearValue('ip_address');
            g_form.clearValue('subject_alternative_name');
            g_form.setDisplay('subject_alternative_name', true);
            g_form.setReadOnly('subject_alternative_name', true);
            if (enable_san_value == '1') {
                g_form.setDisplay('san_fields', true);
                if (san_names.includes('DNS')) {
                    g_form.setDisplay('add_dns_values', true);
                }
            }
            g_form.setDisplay('dns', false);
            if (g_form.getValue('certificate_authority') !== 'Amazon') {
                if (enable_san_value == '1') {
                    if (san_names.includes('IP Address')) {
                        g_form.setDisplay('add_ip_address', true);
                    }
                }
                g_form.setMandatory('certificate_validation_type', false);
                g_form.setDisplay('certificate_validation_type', false);
                g_form.setMandatory('certificate_transparency_logging_preference', false);
                g_form.setDisplay('certificate_transparency_logging_preference', false);
            } else {
                g_form.setDisplay('certificate_validation_type', true);
                g_form.setMandatory('certificate_validation_type', true);
                g_form.setDisplay('certificate_transparency_logging_preference', true);
                g_form.setMandatory('certificate_transparency_logging_preference', true);
                g_form.setDisplay('add_ip_address', false);
            }
            if (g_form.getValue('certificate_authority') === 'GoDaddy' || g_form.getValue('certificate_authority') === 'Trustwave') {
                g_form.setDisplay('add_ip_address', false);
            }
            g_form.setDisplay('ip_address', false);
        }
        if (g_form.getValue('certificate_category').toLowerCase() === 'client' && g_form.getValue('certificate_authority') !== 'Microsoft Enterprise') {
            if (enable_san_value == '1') {
                g_form.setDisplay('subject_alternative_name', true);
                g_form.setReadOnly('subject_alternative_name', false);
            }
        }
        if (g_form.getValue('certificate_authority') === 'Microsoft Enterprise') {
            g_form.clearValue('add_email_address');
            g_form.clearValue('san_email');
            if (enable_san_value == '1') {
                if (san_names.includes('Email Address')) {
                    g_form.setDisplay('add_email_address', true);
                }
            }
            g_form.setDisplay('san_email', false);
        } else {
            g_form.clearValue('add_email_address');
            g_form.clearValue('san_email');
            g_form.setDisplay('add_email_address', false);
            g_form.setDisplay('san_email', false);
        }
    } else {
        g_form.clearValue('add_dns_values');
        g_form.clearValue('add_ip_address');
        g_form.clearValue('dns');
        g_form.clearValue('ip_address');
        g_form.clearValue('subject_alternative_name');
        g_form.setDisplay('subject_alternative_name', false);
        g_form.setDisplay('san_fields', false);
        g_form.setDisplay('add_dns_values', false);
        g_form.setDisplay('add_ip_address', false);
        g_form.setDisplay('dns', false);
        g_form.setDisplay('ip_address', false);
        g_form.clearValue('add_email_address');
        g_form.clearValue('san_email');
        g_form.setDisplay('add_email_address', false);
        g_form.setDisplay('san_email', false);
        if (g_form.getValue('certificate_authority') === 'Microsoft Enterprise') {
            if (enable_san_value == '1') {
                g_form.setDisplay('subject_alternative_name', true);
                g_form.setReadOnly('subject_alternative_name', true);
                g_form.setDisplay('san_fields', true);
                if (san_names.includes('DNS')) {
                    g_form.setDisplay('add_dns_values', true);
                }
                if (san_names.includes('IP Address')) {
                    g_form.setDisplay('add_ip_address', true);
                }
                if (san_names.includes('Email Address')) {
                    g_form.setDisplay('add_email_address', true);
                }
            }
        } else if (g_form.getValue('certificate_category').toLowerCase() === 'client') {
            if (enable_san_value == '1') {
                g_form.setDisplay('subject_alternative_name', true);
                g_form.setReadOnly('subject_alternative_name', false);
            }
        } else if (g_form.getValue('certificate_category').toLowerCase() === 'server') {
            if (enable_san_value == '1') {
                g_form.setDisplay('subject_alternative_name', true);
                g_form.setReadOnly('subject_alternative_name', true);
                g_form.setDisplay('san_fields', true);
                if (san_names.includes('DNS')) {
                    g_form.setDisplay('add_dns_values', true);
                }
                if (g_form.getValue('certificate_authority') !== 'GoDaddy' && g_form.getValue('certificate_authority') !== 'Trustwave') {
                    if (san_names.includes('IP Address')) {
                        g_form.setDisplay('add_ip_address', true);
                    }
                }
            }
        }
    }
    g_form.clearValue('common_name');
    g_form.clearValue('server_type');
    g_form.setMandatory('server_type', false);
    g_form.setDisplay('server_type', false);
    g_form.clearValue('microsoft_template');
    g_form.setMandatory('microsoft_template', false);
    g_form.setDisplay('microsoft_template', false);
    g_form.clearValue('division');
    g_form.setMandatory('division', false);
    g_form.setDisplay('division', false);
    g_form.clearValue('certificate_type');
    g_form.setMandatory('certificate_type', false);
    g_form.setDisplay('certificate_type', false);
    g_form.clearValue('entrust_certificate_type');
    g_form.setMandatory('entrust_certificate_type', false);
    g_form.setDisplay('entrust_certificate_type', false);
    g_form.clearValue('ejbca_end_entity_profile_name');
    g_form.setMandatory('ejbca_end_entity_profile_name', false);
    g_form.setDisplay('ejbca_end_entity_profile_name', false);
    g_form.clearValue('ejbca_end_entity_user_name');
    g_form.setDisplay('ejbca_end_entity_user_name', false);
    g_form.clearValue('ejbca_issuer_common_name');
    g_form.setMandatory('ejbca_issuer_common_name', false);
    g_form.setDisplay('ejbca_issuer_common_name', false);
    g_form.clearValue('ejbca_certificate_profile_name');
    g_form.setMandatory('ejbca_certificate_profile_name', false);
    g_form.setDisplay('ejbca_certificate_profile_name', false);
    g_form.clearValue('sectigo_certificate_type');
    g_form.setMandatory('sectigo_certificate_type', false);
    g_form.setDisplay('sectigo_certificate_type', false);
    g_form.clearValue('sectigo_server_type');
    g_form.setMandatory('sectigo_server_type', false);
    g_form.setDisplay('sectigo_server_type', false);
    g_form.clearValue('godaddy_certificate_type');
    g_form.setMandatory('godaddy_certificate_type', false);
    g_form.setDisplay('godaddy_certificate_type', false);
    g_form.clearOptions('godaddy_slot_size');
    g_form.clearValue('godaddy_slot_size');
    g_form.setMandatory('godaddy_slot_size', false);
    g_form.setDisplay('godaddy_slot_size', false);
    g_form.clearValue('globalsign_certificate_type');
    g_form.setMandatory('globalsign_certificate_type', false);
    g_form.setDisplay('globalsign_certificate_type', false);
    g_form.clearValue('domain_admin_email');
    g_form.setMandatory('domain_admin_email', false);
    g_form.setDisplay('domain_admin_email', false);
    g_form.clearValue('business_category');
    g_form.setMandatory('business_category', false);
    g_form.setDisplay('business_category', false);
    g_form.clearValue('designation');
    g_form.setMandatory('designation', false);
    g_form.setDisplay('designation', false);
    g_form.clearValue('incorporating_agency_reg_no');
    g_form.setMandatory('incorporating_agency_reg_no', false);
    g_form.setDisplay('incorporating_agency_reg_no', false);
    g_form.clearOptions('globalsign_mssl_certificate_type');
    g_form.clearValue('globalsign_mssl_certificate_type');
    g_form.setMandatory('globalsign_mssl_certificate_type', false);
    g_form.setDisplay('globalsign_mssl_certificate_type', false);
    g_form.clearOptions('globalsign_mssl_profile_name');
    g_form.clearValue('globalsign_mssl_profile_name');
    g_form.setMandatory('globalsign_mssl_profile_name', false);
    g_form.setDisplay('globalsign_mssl_profile_name', false);
    g_form.clearOptions('trustwave_certificate_type');
    g_form.clearValue('trustwave_certificate_type');
    g_form.setMandatory('trustwave_certificate_type', false);
    g_form.setDisplay('trustwave_certificate_type', false);
	g_form.clearOptions('hydrantid_policy_name');
	g_form.clearValue('hydrantid_policy_name');
	g_form.setMandatory('hydrantid_policy_name', false);
	g_form.setDisplay('hydrantid_policy_name', false);
	g_form.clearOptions('digicert_mpki_profiles');
	g_form.clearValue('digicert_mpki_profiles');
	g_form.setMandatory('digicert_mpki_profiles', false);
	g_form.setDisplay('digicert_mpki_profiles', false);
	g_form.clearOptions('swisssign_client_name');
	g_form.clearValue('swisssign_client_name');
	g_form.setMandatory('swisssign_client_name', false);
	g_form.setDisplay('swisssign_client_name', false);
	g_form.clearOptions('swisssign_product');
	g_form.clearValue('swisssign_product');
	g_form.setMandatory('swisssign_product', false);
	g_form.setDisplay('swisssign_product', false);
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-26 16:06:01</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bce144f51b65d550cda7db91dd4bcbf6</sys_id>
        <sys_mod_count>106</sys_mod_count>
        <sys_name>set_ca_account</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>catalog_script_client_bce144f51b65d550cda7db91dd4bcbf6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-31 07:11:50</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
