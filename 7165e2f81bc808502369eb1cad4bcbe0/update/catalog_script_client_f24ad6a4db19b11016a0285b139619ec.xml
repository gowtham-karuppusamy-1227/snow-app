<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Renew Certificate">9e85ab541b1595102369eb1cad4bcb62</cat_item>
        <cat_variable>IO:152bca28dbd5b11016a0285b1396199b</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>renew_set_common_name</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
	var company_name = g_form.getValue('company_name');
    try {
        var reference_field = g_form.getValue('certificate_reference');
        if (reference_field) {
            var ga = new GlideAjax('get_cert_common_name');
            ga.addParam("sysparm_name", "getCertCommonName");
            ga.addParam("sysparm_ref_id", reference_field);
			ga.addParam("sysparm_company", company_name);
            ga.getXML(getResponse);
        }
    } catch (error) {
        g_form.addErrorMessage("Error: " + error);
        var message = 'Error occured while fetching certificate details from the certificate table - ' + error;
        ga = new GlideAjax('avx_logger');
        ga.addParam("sysparm_name", "avxLogger");
        ga.addParam("sysparm_level", "Error");
        ga.addParam("sysparm_script", "renew_set_common_name");
        ga.addParam("sysparm_application", "AppViewX");
        ga.addParam("sysparm_message", message);
        ga.getXML(function() {});
    }
    function getResponse(response) {
        try {
            var res = response.responseXML.documentElement.getAttribute('answer');
            try {
                res = JSON.parse(res);
            } catch (err) {
                throw "Couldn't parse ca tag name response from CLM table.";
            }
            var common_name = res['common_name'];
            var serial_number = res['serial_number'];
            var certificate_category = res['certificate_category'];
			var private_key = res['private_key_available'];
            var field_value = common_name + "|" + serial_number + "|" + certificate_category;
            g_form.addOption('certificate', field_value, field_value);
        } catch (error) {
            g_form.addErrorMessage("Error: " + error);
            var message = 'Error occured while fetching certificate details from the certificate table - ' + error;
            ga = new GlideAjax('avx_logger');
            ga.addParam("sysparm_name", "avxLogger");
            ga.addParam("sysparm_level", "Error");
            ga.addParam("sysparm_script", "renew_set_common_name");
            ga.addParam("sysparm_application", "AppViewX");
            ga.addParam("sysparm_message", message);
            ga.getXML(function() {});
        }
    }
    // try {
    //     var reference_field = g_form.getValue('certificate_reference');
    //     if (reference_field) {
    //         g_form.getReference('certificate_reference', function(gr) {
    //             if (gr) {
    //                 var common_name = gr.getDisplayValue('common_name');
    //                 var serial_number = gr.getDisplayValue('serial_number');
    //                 var certificate_category = gr.getDisplayValue('certificate_category');
    //                 var field_value = common_name + "|" + serial_number + "|" + certificate_category;
    //                 g_form.setValue('certificate', field_value, field_value);
    //             } else {
    //                 throw "Couldn't find the reference field value in the certificate table";
    //             }
    //         });
    //     }
    // } catch (error) {
    //     g_form.addErrorMessage("Error: " + error);
    //     var message = 'Error occured while fetching certificate details from the certificate table - ' + error;
    //     var ga = new GlideAjax('avx_logger');
    //     ga.addParam("sysparm_name", "avxLogger");
    //     ga.addParam("sysparm_level", "Error");
    //     ga.addParam("sysparm_script", "renew_set_common_name");
    //     ga.addParam("sysparm_application", "AppViewX");
    //     ga.addParam("sysparm_message", message);
    //     ga.getXML(function() {});
    // }
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-09-12 12:07:35</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f24ad6a4db19b11016a0285b139619ec</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>renew_set_common_name</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>catalog_script_client_f24ad6a4db19b11016a0285b139619ec</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-20 14:15:11</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
